buildscript {
	dependencies {
		classpath("org.postgresql:postgresql:42.7.1")
		classpath("org.flywaydb:flyway-database-postgresql:10.4.1")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.flywaydb.flyway' version '10.4.1'
}

group = 'com.wordcloud'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def postgresVersion = '42.7.1'
def flywayVersion = '10.4.1'
def hibernateVersion = '6.3.1.Final'
def hibernateValidatorVersion = '8.0.1.Final'
def apacheCommonsTextVersion = '1.10.0'
def h2Version = '2.2.220'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation  'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'

	implementation group: 'org.postgresql',
			name: 'postgresql',
			version: postgresVersion

	compileOnly group: 'org.flywaydb',
			name: 'flyway-core',
			version: flywayVersion

	implementation group: 'org.hibernate',
			name: 'hibernate-core',
			version: hibernateVersion

	implementation group: 'org.hibernate',
			name: 'hibernate-validator',
			version: hibernateValidatorVersion

	implementation group: 'org.apache.commons',
			name: 'commons-text',
			version: apacheCommonsTextVersion

	testImplementation group: 'com.h2database',
			name: 'h2',
			version: h2Version
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	def props = new Properties()

	file("src/main/resources/application.properties")
			.withInputStream { props.load(it) }

	url = props.getProperty("spring.datasource.url")
	user = props.getProperty("spring.datasource.username")
	password = props.getProperty("spring.datasource.password")

	locations = ['classpath:db/migration']
}